version: "3.7"

services:
  rosterboard-db:
    image: postgres:17
    volumes:
      - rosterboard-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-rosterboard}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-rosterboard}
      POSTGRES_DB: ${POSTGRES_DB:-rosterboard}
    container_name: rosterboard-db
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - rosterboard-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 20s
      retries: 10
  rosterboard-redis:
    image: redis:latest
    container_name: rosterboard-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - rosterboard-net
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -h localhost -p 6379 ping"]
      interval: 5s
      timeout: 5s
      retries: 3
  rosterboard:
    image: jouleworks/rosterboard:latest
    restart: unless-stopped
    container_name: rosterboard
    ports:
      - "9418:9418"
    networks:
      - rosterboard-net
    volumes:
      - rosterboard-data:/app/config
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9418/ping/ || exit 1"]
      interval: 5s
      timeout: 20s
      retries: 10


volumes:
  rosterboard-db:
  rosterboard-data:

networks:
  rosterboard-net:
    driver: bridge